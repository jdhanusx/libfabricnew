.TH "FI_DOMAIN" 3 "2014-07-25" "libfabric" "Libfabric Programmer's Manual" libfabric
.SH NAME
fi_domain \- Open a fabric access domain
.SH SYNOPSIS
.B "#include <rdma/fabric.h>"
.br
.B "#include <rdma/fi_domain.h>"
.HP
.BI "int fi_fdomain(struct fid_fabric *" fabric ", struct fi_info *" info ", "
.BI "struct fid_domain **" domain ", void *" context ");"
.HP
.BI "int fi_close(struct fid *" domain ");"
.PP
.HP
.BI "int fi_domain_query(struct fid_domain *" domain ", "
.BI "struct fi_domain_attr *" attr ", size_t *" attrlen ");"
.PP
.HP
.BI "int fi_domain_bind(struct fid_domain *" domain ", struct fid *" eq ", "
.BI "uint64_t " flags ");"
.HP
.BI "int fi_open(struct fid_domain *" domain ", const char *" name ", uint64_t " flags ","
.BI "struct fid **" fif ", void *" context ");"
.SH ARGUMENTS
.IP "fabric" 12
Fabric domain
.IP "info" 12
Details about the access domain to be opened, obtained from fi_getinfo.
.IP "domain" 12
An opened access domain.
.IP "context" 12
User specified context associated with the domain.  This context is returned as
part of any asynchronous event associated with the domain.
.IP "attr" 12
Pointer to write domain attributes.
.IP "attrlen" 12
On input, specifies the size of the attribute buffer.  On output, the number of
bytes written.
.IP "eq" 12
Event queue for asynchronous operations initiated on the domain.
.IP "name" 12
Name associated with an interface.
.IP "fif" 12
Fabric interface
.SH "DESCRIPTION"
An access domain typically refers to a
physical or virtual NIC or hardware port; however, a domain may span across
multiple hardware components for fail-over or data striping purposes.
A domain defines the boundary for associating different resources
together.  Fabric resources belonging to the same domain may share
resources.
.SS "fi_fdomain"
Opens a fabric access domain, also referred to as a resource domain.
Fabric domains are identified by name.  Domain names are character
strings. By convention, domain names appear similar to path names.
This helps to identify the specific software
and hardware provider associated with a domain.  The properties of
the opened domain are specified using the fi_info structure.  See fi_getinfo
for additional details.
.SS "fi_open"
fi_open is used to open provider specific interfaces.
Provider interfaces may be used to access low-level resources and operations
that are specific to the opened resource domain.  The details of domain
interfaces are outside the scope of this documentation.
.SS "fi_domain_query"
Query the attributes of an opened domain.
.nf
struct fi_domain_attr {
	/* Note to providers: set prov_attr to static struct */
	size_t			prov_attr_size;
	void			*prov_attr;
	size_t			mr_key_size;
	size_t			eq_data_size;
};
.fi
.IP "prov_attr_size"
Size of provider specific attribute structure.
.IP "prov_attr"
Pointer to a provider specific attribute structure.  The format and contents
of this structure is outside the scope of this interface.
.IP "mr_key_size"
Size of the memory region remote access key, in bytes.  Applications that
request their own MR key must select a value within the range specified by
this value.
.IP "eq_data_size"
The number of bytes that the provider supports for remote EQ data.  See
the FI_REMOTE_EQ_DATA flag (fi_getinfo) for the use of remote EQ data. 
.SS "fi_domain_bind"
Associates an event queue with the domain.  Binding an event queue to a
domain with the FI_REG_MR flag indicates that the provider should perform
all memory registration operations asynchronously, with the completion
reported through the event queue.  If an event queue is not bound to the
domain, then memory registration requests behave synchronously.
.SS "fi_close"
The fi_close call is used to release all resources associated with a domain
or interface.  All items associated with the opened domain must
be released prior to calling fi_close.
.SH "RETURN VALUE"
Returns 0 on success. On error, a negative value corresponding to fabric
errno is returned. Fabric errno values are defined in 
.IR "rdma/fi_errno.h".
.SH "NOTES"
Users should call fi_close to release all resources allocated to the fabric
domain.
.PP
The following fabric resources are associated with access domains:
active endpoints, memory regions, completion event queues, and address
vectors.
.SH "SEE ALSO"
fi_getinfo(3), fi_endpoint(3), fi_eq(3), fi_av(3), fi_mr(3)
