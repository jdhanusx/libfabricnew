.TH "FI_FABRIC" 3 "2013-07-25" "libfabric" "Libfabric Programmer's Manual" libfabric
.SH NAME
fi_fabric \- Fabric domain operations
.PP
fi_fabric / fi_close
.RS
Open / close a fabric domain
.RE
.PP
fi_fopen / fi_close
.RS
Open / close a fabric specific interface
.RE
.SH SYNOPSIS
.B "#include <rdma/fabric.h>"
.HP
.BI "int fi_fabric(const char *" name ", uint64_t " flags ","
.BI "struct fid_fabric **" fabric ", void *" context ");"
.HP
.BI "int fi_close(struct fid *" fabric ");"
.PP
.HP
.BI "int fi_fopen(struct fid_fabric *" fabric ", const char *" name ", uint64_t " flags ","
.BI "struct fid **" fif ", void *" context ");"
.SH ARGUMENTS
.IP "name" 12
Name associated with the fabric or interface.
.IP "flags" 12
Control flags
.IP "fabric" 12
Fabric domain
.IP "fif" 12
Fabric interface
.IP "context" 12
User specified context associated with the opened object.  This context is
returned as part of any associated asynchronous event.
.SH "DESCRIPTION"
A fabric domain represents a collection of hardware and software resources
that access a single physical or virtual network.  All network ports on a
system that can communicate with each other through their attached
networks belong to the same fabric domain.  A fabric domain shares
network addresses and can span multiple providers.
.SS "fi_fabric"
Opens a fabric resource domain.  Fabric domains are identified by a
character strings.  The format of the fabric name is not defined by
libfabric, but includes numeric identifiers and administrator assigned
descriptions or names.  The names of fabrics which are reachable by the
current system are returned as part of the fi_getinfo call.
.PP
The fi_fabric call takes an operational flags parameter as input.  This
is reserved for future extensions and must be set to 0.
.SS "fi_fopen"
fi_fopen is used to open any available fabric specific interfaces.
Fabric interfaces may be used to access low-level resources and operations
that are specific to the connected fabric network.  The details of fabric
interfaces are outside the scope of this documentation.
.SS "fi_close"
The fi_close call is used to release all resources associated with a fabric
domain or interface.  All items associated with the opened fabric must
be released prior to calling fi_close.
.SH "NOTES"
The following resources are associated with fabric domains: access domains,
passive endpoints, and CM event queues.
.SH "RETURN VALUE"
Returns 0 on success. On error, a negative value corresponding to fabric
errno is returned. Fabric errno values are defined in 
.IR "rdma/fi_errno.h".
.SH "ERRORS"
.SH "SEE ALSO"
fabric(7), fi_getinfo(3), fi_domain(3), fi_eq(3), fi_endpoint(3)
